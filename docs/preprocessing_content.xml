<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter>
  <title>Preprocessing Content</title>

  <para>Generally, SWeTE will do a pretty good job of parsing and translating
  website content out of the box. Sometimes, however, you may feel the need to
  make changes to the page content to help make it easier to deal with. Some
  examples of such situations include:</para>

  <orderedlist>
    <listitem>
      <para><emphasis>Tagging content</emphasis>. Some strings may include
      both static and dynamic parts. You may want to explicitly mark the
      dynamic parts using <literal>&lt;span
      data-swete-translate="0"&gt;</literal> tags so that you only need to
      translate the static string once, or add <literal>notranslate="1"
      </literal>to some sections to prevent translation altogether.</para>
    </listitem>

    <listitem>
      <para><emphasis>Fixing malformed HTML</emphasis>. Many web sites include
      invalid HTML that SWeTE is having problems parsing. When you spot this
      type of problem, you may want to fix the HTML using standard pattern
      matching before the content is parsed by the SWeTE DOM parser.</para>
    </listitem>

    <listitem>
      <para><emphasis>Modifying the headers</emphasis>. In some cases you may
      want to add, remove, or modify headers before they are processed by
      SWeTE. <parameter/></para>
    </listitem>
  </orderedlist>

  <para>There are three ways to modify input content to make it more amenable
  to SWeTE's preferences:</para>

  <orderedlist>
    <listitem>
      <para><emphasis>Make changes to the source site</emphasis>. From a
      performance and maintenance perspective this is the best option as it
      doesn't require any changes to SWeTE itself. An example of this type of
      change is if you wanted a section to be marked as "do not translate",
      you can just add a <literal>notranslate="1"</literal> parameter to the
      tag in the source content. Performance hit: ZERO.</para>
    </listitem>

    <listitem>
      <para><emphasis>Text Filters</emphasis>. SWeTE allows you to add text
      filters which are regular expressions for replacing certain patterns.
      All sites come with a set of default filters (e.g. for wrapping numeric
      values in <literal>&lt;span data-swete-translate="0"&gt;</literal> and
      dates), but you can create your own filters as well to modify almost
      anything. You should try not to create too many text filters because
      each text node in a document is compared to every filter once per
      request. I.e. For each new filter, SWeTE may need to perform hundreds of
      regular expression comparisons per request. Performance hit:
      Moderate.</para>

      <para>See <xref linkend="automatic-date-wrapping"/> for more information
      about text filters.</para>
    </listitem>

    <listitem>
      <para><emphasis>PHP Event Handlers</emphasis>. SWeTE allows you to
      define a delegate class for each site where you can implement functions
      that will be called at various stages of the request-response
      cycle.</para>
    </listitem>
  </orderedlist>

  <para>This chapter focuses on the last option: PHP Event Handlers.</para>

  <section>
    <title>The Site Delegate Class</title>

    <para>SWeTE allows you to define a delegate class corresponding to each
    site in the SWeTE instance. This delegate class can contain the following
    methods:</para>

    <orderedlist>
      <listitem>
        <para><literal>fixHtml(string $html) : string</literal> . A method
        that takes the string content of a webpage as it has been received
        from the source site, and is expected to return string content that
        has been modified (or not modified) and ready to pass to the DOM
        parser.</para>
      </listitem>

      <listitem>
        <para><literal>preprocess(DOMDocument $document) : void</literal>. A
        method that takes the DOMDocument as parsed from the source web page
        content and is expected to use the PHP DOM methods to make changes to
        the document as required for your site's purposes.</para>
      </listitem>

      <listitem>
        <para><literal>preprocessHeaders(array &amp;$headers) : void</literal>
        . A method that allows you to process/modify the headers that have
        been retrieved from the source site. It takes a reference to an array
        of HTTP headers (strings) which can then be modified.</para>
      </listitem>
    </orderedlist>

    <para>Using these three hooks, you should be able to arbitrarily modify
    the input content to suit your purposes.</para>

    <section>
      <title>Creating the Delegate Class</title>

      <para>SWeTE uses a file path convention for finding the delegate class
      for each site. It expects to find your site's delegate class named
      <literal>sites_&lt;site_id&gt;_Delegate</literal> at:</para>

      <para>swete-admin/sites/<literal>&lt;site_id&gt;</literal>/Delegate.php</para>

      <para>Where <literal>&lt;site_id&gt;</literal> is the Site ID of your
      the web site profile in SWeTE. </para>

      <tip>
        <para>You can find the Site ID for a site by clicking on the "Sites"
        tab in the top menu. The Site ID will be located in the column
        labelled "Website ID" in the list of sites in your system.</para>
      </tip>

      <para>E.g. If your website has site ID 428, then your Delegate class
      would be named <literal>sites_428_Delegate</literal> and would be
      located at:</para>

      <para>swete-admin/sites/428/Delegate.php</para>

      <para>A minimal delegate class without any methods defined would look
      like:</para>

      <programlisting>&lt;?php
class sites_428_Delegate {
}</programlisting>

      <para>but a more complete Delegate class, with preprocessing methods
      implemented might look something like:</para>

      <programlisting>&lt;?php
class sites_429_Delegate {

    /**
     * Called before page is processed.  Fixes HTML.
     */
    function fixHtml($html){
        
        $html = preg_replace(
            '/Logged in as &lt;b&gt;([^&lt;]*)&lt;\/b&gt;/', 
            'Logged in as &lt;span data-swete-translate="0" '.
            'style="font-weight:bold"&gt;$1&lt;/span&gt;',
            $html
        );
        
        return $html;
    }
    

    /**
     * Preprocesses HTTP headers before they are handled by SWeTE.
     */
    function preprocessHeaders(&amp;$headers){
        foreach ( $headers as $k=&gt;$h ){
            // WARNING:  This rule is ONLY FOR DEVELOPMENT MODE
            // When we go live we should remove this rule and 
            // make the proxy so that it will work properly with 
            // HTTPS
            $headers[$k] = preg_replace(
                '#https://www.example.com.com#', 
                'http://www.example.com', 
                $h
            );
        }
    }
    

    /**
     * Preprocesses the DOM before it is run through SWeTE's 
     * processor for translation and proxification.
     */
    function preprocess(DOMDocument $dom){
        
        // We don't need to translate building locations
        $xpath = new DOMXPath($dom);
        $buildLocations = $xpath-&gt;query(
            "//select[@id='buildLocations']/option[@value!='']"
        );
        foreach ($buildLocations as $o){
            $o-&gt;setAttribute('notranslate','1');
        }
        
        
        // We don't need to translate employee names that appear 
        // in the employee dropdown
        $employees = $xpath-&gt;query(
            "//select[@id='employee']/option[@value!='']"
        );
        foreach ( $employees as $o ){
            $o-&gt;setAttribute('notranslate','1');
        }
        
        // The product list page includes a p-id div for each 
        // product that is hidden. There is no need to translate this
        $pids = $xpath-&gt;query("//div[@id='p-id']");
        foreach ($pids as $pid){
            $pid-&gt;setAttribute('notranslate', '1');
        }
        
        // Order Review Page
        
        $shippingAddresses = $xpath-&gt;query(
            "//td[@class='CheckoutReviewShipTo']"
        );
        foreach ( $shippingAddresses as $a ){
            $a-&gt;setAttribute('notranslate', '1');
        }
        

        $billToTable = $xpath-&gt;query("//table[@id='BillToTable']");
        foreach ( $billToTable as $b){
            $b-&gt;setAttribute('notranslate', '1');
            $heading = $xpath-&gt;query('//h6', $b);
            foreach ($heading as $h){
                $h-&gt;setAttribute('translate', '1');
            }
        }
        
        
        // Order Confirmation Page
        
        $shipTo = $xpath-&gt;query("//td[@id='customerinforight']");
        foreach ( $shipTo as $s){
            $s-&gt;setAttribute('notranslate', '1');
            // still translate the heading
            $bs = $xpath-&gt;query('//b', $s);
            foreach ($bs as $b){
            $b-&gt;setAttribute('translate', '1');
            }
        }

    }
}

</programlisting>
    </section>

    <section>
      <title>Processing Order</title>

      <para>A typical SWeTE HTTP request is processed as follows:</para>

      <orderedlist>
        <listitem>
          <para>Client makes HTTP request for the proxy site (i.e. the SWeTE
          translated site).</para>
        </listitem>

        <listitem>
          <para>SWeTE performs background HTTP request for associated content
          in the source site.</para>
        </listitem>

        <listitem>
          <para>SWeTE preprocesses the content received from the source
          site:</para>

          <orderedlist>
            <listitem>
              <para>SWeTE calls <literal>fixHtml()</literal> of the delegate
              class to fix any problematic HTML and provide an opportunity to
              perform pattern matching and replacement as desired.</para>
            </listitem>

            <listitem>
              <para>SWeTE parses the fixed HTML into a
              <classname>DOMDocument</classname> tree.</para>
            </listitem>

            <listitem>
              <para>SWeTE calls the delegate class'
              <methodname>preprocess()</methodname> method on the parsed
              <classname>DOMDocument</classname> to give it an opportunity to
              modify the document structure as desired.</para>
            </listitem>

            <listitem>
              <para>SWeTE performs the site's text filters on all of the text
              nodes (except style and script nodes) in the
              <classname>DOMDocument</classname>. (e.g. to wrap numbers and
              dates in the appropriate tags).</para>
            </listitem>
          </orderedlist>
        </listitem>

        <listitem>
          <para>SWeTE proxifies and translates the content.</para>
        </listitem>

        <listitem>
          <para>SWeTE calls the <methodname>preprocessHeaders()</methodname>
          method of the delegate class on the response headers that were
          received from the source site to give it an opportunity to make
          changes as desired.</para>
        </listitem>

        <listitem>
          <para>SWeTE proxifies the response headers (e.g. to convert
          <literal>Location</literal> headers to point to the proxy site
          instead of the source site).</para>
        </listitem>

        <listitem>
          <para>SWeTE outputs the final content back to the client.</para>
        </listitem>
      </orderedlist>
    </section>
  </section>
</chapter>
